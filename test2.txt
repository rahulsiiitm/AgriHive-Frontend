import 'package:flutter/material.dart';

class ChatHistoryItem {
  final String id;
  final String title;
  final String lastMessage;
  final DateTime createdAt;
  final int messageCount;

  ChatHistoryItem({
    required this.id,
    required this.title,
    required this.lastMessage,
    required this.createdAt,
    required this.messageCount,
  });
}

class ChatHistorySidebar extends StatelessWidget {
  final bool isVisible;
  final VoidCallback onClose;
  final Function(String chatId) onChatSelected;
  final List<ChatHistoryItem> chatHistory;
  final bool isLoading;

  const ChatHistorySidebar({
    super.key,
    required this.isVisible,
    required this.onClose,
    required this.onChatSelected,
    required this.chatHistory,
    this.isLoading = false,
  });

  @override
  Widget build(BuildContext context) {
    final screenWidth = MediaQuery.of(context).size.width;
    final sidebarWidth = screenWidth * 0.8 > 300 ? 300.0 : screenWidth * 0.8;

    return Stack(
      children: [
        // Animated overlay background
        AnimatedOpacity(
          duration: const Duration(milliseconds: 300),
          opacity: isVisible ? 1.0 : 0.0,
          child: isVisible
              ? GestureDetector(
                  onTap: onClose,
                  child: Container(
                    color: Colors.black.withOpacity(0.5),
                  ),
                )
              : const SizedBox.shrink(),
        ),
        
        // Sliding sidebar
        AnimatedPositioned(
          duration: const Duration(milliseconds: 300),
          curve: Curves.easeInOut,
          right: isVisible ? 0 : -sidebarWidth,
          top: 0,
          bottom: 0,
          width: sidebarWidth,
          child: SafeArea(
            child: Material(
              elevation: 16,
              color: Colors.white,
              child: Column(
                children: [
                  _buildHeader(),
                  Expanded(child: _buildHistoryList()),
                  _buildFooter(),
                ],
              ),
            ),
          ),
        ),
      ],
    );
  }

  Widget _buildHeader() {
    return Container(
      color: Colors.green.shade600,
      padding: const EdgeInsets.all(16),
      child: Row(
        children: [
          const Icon(Icons.history, color: Colors.white),
          const SizedBox(width: 8),
          const Text(
            "Chat History",
            style: TextStyle(
              color: Colors.white,
              fontWeight: FontWeight.bold,
              fontFamily: 'LufgaSemiBold',
              fontSize: 16,
            ),
          ),
          const Spacer(),
          IconButton(
            icon: const Icon(Icons.close, color: Colors.white),
            onPressed: onClose,
          ),
        ],
      ),
    );
  }

  Widget _buildHistoryList() {
    if (isLoading) {
      return const Center(
        child: CircularProgressIndicator(
          color: Colors.green,
        ),
      );
    }

    if (chatHistory.isEmpty) {
      return Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Icon(
              Icons.chat_bubble_outline,
              size: 48,
              color: Colors.grey.shade400,
            ),
            const SizedBox(height: 16),
            Text(
              "No chat history yet",
              style: TextStyle(
                color: Colors.grey.shade600,
                fontFamily: 'LufgaSemiBold',
                fontSize: 16,
              ),
            ),
            const SizedBox(height: 8),
            Text(
              "Start a conversation to see your chat history here",
              textAlign: TextAlign.center,
              style: TextStyle(
                color: Colors.grey.shade500,
                fontFamily: 'LufgaSemiBold',
                fontSize: 12,
              ),
            ),
          ],
        ),
      );
    }

    return ListView.separated(
      itemCount: chatHistory.length,
      separatorBuilder: (context, index) => Divider(
        height: 1,
        color: Colors.grey.shade200,
      ),
      itemBuilder: (context, index) {
        final chat = chatHistory[index];
        return _buildChatHistoryTile(chat);
      },
    );
  }

  Widget _buildChatHistoryTile(ChatHistoryItem chat) {
    return ListTile(
      contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      leading: Container(
        width: 40,
        height: 40,
        decoration: BoxDecoration(
          color: Colors.green.shade100,
          borderRadius: BorderRadius.circular(20),
        ),
        child: Icon(
          Icons.chat_bubble_outline,
          color: Colors.green.shade600,
          size: 20,
        ),
      ),
      title: Text(
        chat.title,
        style: const TextStyle(
          fontFamily: 'LufgaSemiBold',
          fontWeight: FontWeight.w600,
          fontSize: 14,
        ),
        maxLines: 1,
        overflow: TextOverflow.ellipsis,
      ),
      subtitle: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          const SizedBox(height: 4),
          Text(
            chat.lastMessage,
            style: TextStyle(
              fontFamily: 'LufgaSemiBold',
              color: Colors.grey.shade600,
              fontSize: 12,
            ),
            maxLines: 2,
            overflow: TextOverflow.ellipsis,
          ),
          const SizedBox(height: 4),
          Row(
            children: [
              Icon(
                Icons.schedule,
                size: 12,
                color: Colors.grey.shade500,
              ),
              const SizedBox(width: 4),
              Text(
                _formatDate(chat.createdAt),
                style: TextStyle(
                  fontFamily: 'LufgaSemiBold',
                  color: Colors.grey.shade500,
                  fontSize: 10,
                ),
              ),
              const Spacer(),
              Container(
                padding: const EdgeInsets.symmetric(horizontal: 6, vertical: 2),
                decoration: BoxDecoration(
                  color: Colors.green.shade50,
                  borderRadius: BorderRadius.circular(10),
                ),
                child: Text(
                  "${chat.messageCount}",
                  style: TextStyle(
                    fontFamily: 'LufgaSemiBold',
                    color: Colors.green.shade600,
                    fontSize: 10,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
      onTap: () => onChatSelected(chat.id),
    );
  }

  Widget _buildFooter() {
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.grey.shade50,
        border: Border(
          top: BorderSide(color: Colors.grey.shade200),
        ),
      ),
      child: Row(
        children: [
          Expanded(
            child: ElevatedButton.icon(
              onPressed: () {
                // Close sidebar when starting new chat
                onClose();
              },
              icon: const Icon(Icons.add, size: 16),
              label: const Text(
                "New Chat",
                style: TextStyle(
                  fontFamily: 'LufgaSemiBold',
                  fontSize: 12,
                ),
              ),
              style: ElevatedButton.styleFrom(
                backgroundColor: Colors.green.shade600,
                foregroundColor: Colors.white,
                padding: const EdgeInsets.symmetric(vertical: 8),
                shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(20),
                ),
              ),
            ),
          ),
          const SizedBox(width: 8),
          IconButton(
            onPressed: () {
              // Show confirmation dialog for clearing history
              _showClearHistoryDialog();
            },
            icon: Icon(
              Icons.delete_outline,
              color: Colors.red.shade400,
              size: 20,
            ),
            style: IconButton.styleFrom(
              backgroundColor: Colors.red.shade50,
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(20),
              ),
            ),
          ),
        ],
      ),
    );
  }

  void _showClearHistoryDialog() {
    // Note: This would need context, so in practice you'd pass a callback
    // or implement this in the parent widget
    print("Clear history dialog would show here");
  }

  String _formatDate(DateTime date) {
    final now = DateTime.now();
    final difference = now.difference(date);

    if (difference.inHours < 1) {
      return "Just now";
    } else if (difference.inHours < 24) {
      return "${difference.inHours}h ago";
    } else if (difference.inDays == 1) {
      return "Yesterday";
    } else if (difference.inDays < 7) {
      return "${difference.inDays}d ago";
    } else if (difference.inDays < 30) {
      final weeks = (difference.inDays / 7).floor();
      return "${weeks}w ago";
    } else {
      return "${date.day}/${date.month}/${date.year}";
    }
  }
}